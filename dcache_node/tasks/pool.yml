---
# TODO: there should be a better parsing of the layout file into a json/yaml
#       structure. We should collect all settings in one data structure.

- name: get list of pool paths from layout file
  shell:
    cmd: "sed  -n 's/^pool.path=//p' /etc/dcache/layouts/{{ inventory_hostname | regex_replace('([^\\.]+).*', '\\1') }}.conf"
    warn: no
  register: outp_pool_path_list
  check_mode: no
  changed_when: False

# - name: get list of pool names from layout file
#   shell:
#     cmd: "sed  -n 's/^pool.name=//p' /etc/dcache/layouts/{{ inventory_hostname | regex_replace('([^\\.]+).*', '\\1') }}.conf"
#     warn: no
#   register: outp_pool_name_list
#   changed_when: False

# - name: zip poolnames and paths to obtain a poolname:path dict
#   set_fact:
#     _poolname_path_map: '{{ dict(outp_pool_name_list.stdout.split() | zip(outp_pool_path_list.stdout.split()))}}'

- name: create pool directories for pools found in layout file
  file:
    state: directory
    path: '{{ item }}'
    owner: dcache
    group: dcache
    mode: 0755
  loop: '{{ outp_pool_path_list.stdout.split() }}'

- name: create data dir within pool directories
  file:
    state: directory
    path: '{{ item }}/data'
    owner: dcache
    group: dcache
    mode: 0755
  loop: '{{ outp_pool_path_list.stdout.split() }}'

# TODO: the current approach only allows having the same setup for all
#       pools on this host. I need to have this on a per pool level
- name: place pool setup file if we have setup info
  template:
    src: pool-setup.j2
    dest: '{{ item }}/setup'
    backup: yes
    owner: dcache
    group: dcache
    mode: 0644
  when: dcache_pool_setup is defined
  loop: '{{ outp_pool_path_list.stdout.split() }}'
  
