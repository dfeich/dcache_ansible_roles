---
# tasks file for roles/dcache_node

# I want to check these vars before we do anything on the nodes!
- name: Check whether essential vars are defined
  fail:
    msg: variable {{ item }} is not defined
  when: item not in  vars
  loop:
    - dcache_db_head
    - dcache_db_owner
    - dcache_srm_door
    - zookeeper_connections
    
- name: install our T3 dcache yum repo
  tags: repo
  yum_repository:
    baseurl: http://linux.web.psi.ch/dist/scientificlinux/7x/x86_64/tier3/dcache
    # name is the section name of the repo
    name: dcache
    description: dCache repository (inst by ansible)
    gpgcheck: no
    enabled: yes
    priority: '1'
    # to prevent inadvertent updates
    exclude: dcache

- name: "install dcache package dcache-{{ dcache_version }}"
  yum:
    name: "dcache-{{ dcache_version }}"
    state: latest
    disable_excludes: dcache

- name: install dcache.conf file
  tags: conf
  template:
    src: "dcache.conf.j2"
    backup: yes
    dest: "/etc/dcache/dcache.conf"
    owner: root
    group: root
    mode: 0644
  #TODO notify: restart dcache

- name: install layout file for {{ inventory_hostname }}
  tags: conf
  template:
    src: dcache_layout.j2
    backup: yes
    dest: "/etc/dcache/layouts/{{ inventory_hostname | regex_replace('([^\\.]+).*', '\\1') }}.conf"
    owner: root
    group: root
    mode: 0644

- name: set a fact if this host is running an admin cell
  tags: always
  set_fact:
    _dcache_have_admin: >-
      {{ dcache_layout| default([])
                      | selectattr('domain','defined')
                      | list
                      | selectattr('domain', 'regex','.*admin$')
                      | list | length | bool }}

- name: copy authorized keys for admin cell access
  copy:
    src: '{{ admin_authorized_keys_file }}'
    dest: /etc/dcache/admin/authorized_keys2
    owner: root
    group: dcache
    mode: 0440
  when: _dcache_have_admin

- name: set a fact if this host is running a gplazma cell
  tags: always
  set_fact:
    _dcache_have_gplazma: >-
      {{ dcache_layout| default([])
                      | selectattr('domain','defined')
                      | list
                      | selectattr('domain', 'regex','.*gplazma$')
                      | list | length | bool }}

- name: run gplazma tasks if we have the gplazma cell
  tags: conf
  include_tasks: gplazma.yml
  when: _dcache_have_gplazma

- name: set a fact if this host is running an spacemanager cell
  tags: always
  set_fact:
    _dcache_have_spacemanager: >-
      {{ dcache_layout| default([])
                      | selectattr('domain','defined')
                      | list
                      | selectattr('domain', 'regex','.*spacemanager$')
                      | list | length | bool }}

- name: install the LinkGroupAuthorization.conf file
  template:
    src: LinkGroupAuthorization.conf.j2
    dest: /etc/dcache/LinkGroupAuthorization.conf
    backup: yes
    owner: dcache
    group: dcache
    mode: 0644
  when: _dcache_have_spacemanager

- name: run pool tasks if this host has a pool definition
  include_tasks: pool.yml
  when: dcache_pool_def is defined
    
- name: set a fact if this host is running a poolmanager cell
  tags: always
  tags: poolmanager
  set_fact:
    _dcache_have_poolmanager: >-
      {{ dcache_layout| default([])
                      | selectattr('domain','defined')
                      | list
                      | selectattr('domain', 'regex','.*poolmanager$')
                      | list | length | bool }}

- name: Run poolmanager tasks if this host has the poolmanager cell
  tags: poolmanager
  include_tasks:
    file: poolmanager.yml
    apply:
      tags: poolmanager
  when: _dcache_have_poolmanager

- name: create /etc/grid-security dir
  file:
    state: directory
    path: /etc/grid-security
    owner: root
    group: root
    mode: 0755

- name: install grid hostcert if defined
  copy:
    src: '{{ files_path_prefix }}{{ dcache_hostcert }}'
    dest: /etc/grid-security/hostcert.pem
    backup: yes
    owner: dcache
    group: root
    mode: 0644
  when: dcache_hostcert is defined

- name: install grid hostkey if defined
  copy:
    src: '{{ files_path_prefix }}{{ dcache_hostkey }}'
    dest: /etc/grid-security/hostkey.pem
    backup: yes
    owner: dcache
    group: root
    mode: 0400
  when: dcache_hostkey is defined

# # TODO: the way of starting/restarting needs to be revised
#   also, whether this is the right place to start services
# - name: Start dcache on this node
#   shell: "/usr/bin/dcache start"
#   register: dcache_started_status
# - name: Status messages from dcache start
#   debug:
#     msg: dcache_started_status.stdout
