---
# tasks file for roles/dcache_node
- name: install our T3 dcache yum repo
  yum_repository:
    baseurl: http://linux.web.psi.ch/dist/scientificlinux/7x/x86_64/tier3/dcache
    # name is the section name of the repo
    name: dcache
    description: dCache repository (inst by ansible)
    gpgcheck: no
    enabled: yes
    # to prevent inadvertent updates
    exclude: dcache

- name: install dcache package
  yum:
    name: dcache
    state: present
    disable_excludes: all

- name: install dcache.conf file
  template:
    src: "dcache.conf.j2"
    dest: "/etc/dcache/dcache.conf"
    owner: root
    group: root
    mode: 0644
  #TODO notify: restart dcache
  #     when: postgresql_hba_entries | length > 0

- name: install layout file for {{ inventory_hostname }}
  template:
    src: dcache_layout.j2
    dest: "/etc/dcache/layouts/{{ inventory_hostname | regex_replace('([^\\.]+).*', '\\1') }}.conf"
    owner: root
    group: root
    mode: 0644

- name: set a fact if this host is running a gplazma cell
  set_fact:
    _dcache_have_gplazma: >-
      {{ dcache_layout| default([])
                      | selectattr('domain','defined')
                      | list
                      | selectattr('domain', 'regex','.*gplazma$')
                      | list | length | bool }}

- name: Is this the gplazma node?
  debug:
    var: _dcache_have_gplazma

- name: install gplazma.conf
  template:
    src: gplazma.conf.j2
    dest: /etc/dcache/gplazma.conf
    owner: root
    group: root
    mode: 0644
  when: _dcache_have_gplazma

# this is for the later poolmanager definitions
# we build up a simpler dict structure with info about all pools
- name: collect pool definitions of all pools
  tags: current
  when: hostvars[item]["dcache_pool_def"] is defined
  set_fact:
    _dcache_pooldefs: >-
      {{ _dcache_pooldefs | default({})
                          | combine({item: hostvars[item]["dcache_pool_def"]}) }}
  loop: '{{ groups["dcache"] }}'

- name: show collected pool definitions
  tags: current
  debug:
    var: _dcache_pooldefs

- name: extract vo list from pool definitions
  tags: current
  set_fact:
    _volist: >-
      {{ (volist | default([]) +  item.value["pools"]
          | map(attribute="vo") | list) | unique  }}
  loop: '{{ _dcache_pooldefs | dict2items}}'
- name: show vo list
  tags: current
  debug:
    var: _volist
    
    
- name: set a fact if this host is running a poolmanager cell
  tags: current
  set_fact:
    _dcache_have_poolmanager: >-
      {{ dcache_layout| default([])
                      | selectattr('domain','defined')
                      | list
                      | selectattr('domain', 'regex','.*poolmanager$')
                      | list | length | bool }}
- name: Is this the poolmanager node?
  tags: current
  debug:
    var: _dcache_have_poolmanager

# - name: show VOs
#   debug:
#     var: {{ _dcache_pooldefs | map}}

- name: install the poolmanager configuration
  tags: current
  template:
    backup: yes
    src: poolmanager.conf.j2
    dest: /var/lib/dcache/config/poolmanager.conf
    owner: root
    group: root
    mode: 0644
  when: _dcache_have_poolmanager
    
